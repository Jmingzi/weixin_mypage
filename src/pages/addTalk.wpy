<style lang="scss">
    textarea {
        height: 120rpx;
        margin: 20rpx;
        width:auto;
    }
    
    .pic-wrap {
        margin: 20rpx;
        width: 160rpx;
        height: 160rpx;
        background-color: #eee;
        
        .iconfont {
            font-size: 40px;
            color: #ccc;
        }
    }
    
    .img-mask {
        background:rgba(255,255,255,0.2);
    }

    .submit-btn {
        left: 50%;
        transform: translateX(-50%);
        bottom: 30rpx;
    }
    .del {
        top:0;
        right:0;
        
        .iconfont {
            font-size: 16px;
        }
    }
</style>

<template>
    <view class="container bg-ff">
        <view class="input-area bd-b">
            <textarea bindinput="inputChange"
                      value="{{ text }}"
                      maxlength="60"
                      placeholder="说点什么吧..." />
            
            <view class="flex-center-start">
                <view class="pic-wrap p-r" wx:if="{{ img.length > 0 }}">
                    <image class="w-100 h-100" src="{{ img[0].url }}"/>
                    <view class="w-100 h-100 p-a l-0 t-0 bg-fa img-mask flex-center" wx:if="{{ img[0].upload === false }}">
                        <text>上传中...</text>
                    </view>
                    <view class="del p-a" wx:if="{{ img[0].upload }}" @tap="delImg">
                        <text class="iconfont color-red">&#xe605;</text>
                    </view>
                </view>
    
                <view class="pic-wrap flex-center" @tap="chooseImg" wx:else>
                    <text class="iconfont">&#xe616;</text>
                </view>
            </view>
        </view>
        
        <view class="flex-center-between bd-b l-100 p-lr20" @tap="locate">
            <text>{{ address ? address.name : '地点' }}</text>
            <text class="iconfont color-999">&#xe621;</text>
        </view>
    
        <view class="flex-center-between bd-b l-100 p-lr20">
            <text>是否公开昵称</text>
            <switch checked="{{ isPub }}" color="#FC9153" data-field="isPub" bindchange="switchChange"/>
        </view>
    
        <view class="flex-center-between bd-b l-100 p-lr20">
            <text>是否制作成图文卡片</text>
            <switch checked="{{ isCard }}" data-field="isCard" color="#FC9153" bindchange="switchChange"/>
        </view>
    
        <view class="flex-center-between bd-b l-100 p-lr20">
            <text>设备信息</text>
            <text class="color-999">{{ systemInfo ? systemInfo.model : '无' }}</text>
        </view>
    
        <view class="btn btn-main submit-btn p-a bg-main color-fff" hover-class="h-bg-main-f" @tap="submit">
            <text class="iconfont">&#xe620;</text>
            <text>立即发表</text>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import DB from '../libs/db'
    import utils from '../libs/utils'
    import AV from '../libs/av-weapp-min.js'

    export default class addTalk extends wepy.page {
        config = {
            navigationBarTitleText: '发表即时心情'
        }
        
        data = {
            text: '',
            img: [],
            address: null,
            isPub: true,
            isCard: false,
            systemInfo: null,
        }
    
        onLoad = () => {
            const self = this
            
            utils.loading()
            wx.getSystemInfo({
                success (res) {
                    // self.systemInfo = { model: res.model }
                    res.model2 = res.model
                    self.systemInfo = Object.assign(res, {
                        model: `${res.brand} ${res.version.split('.')[0]}`
                    })
                    self.$apply()
                    
                    utils.loading(true)
                }
            })
        }
        
        getForm () {
            if (!this.text.trim()) {
                utils.modal({ content: '请输入内容' })
                return false
            }
            
            if (this.img.some(x => x.upload === false)) {
                utils.modal({ content: '请等待图片上传完成' })
                return false
            }
            
            return Object.assign({
                talkContent: this.text,
                talkImg: this.img,
                talkAddress: this.address,
                talkIsPub: this.isPub,
                talkIsCard: this.isCard,
                talkSystemInfo: this.systemInfo,
                dataType: 'talk'
            }, DB.commonField())
        }
        
        methods = {
            inputChange (e) {
                this.text = e.detail.value
            },
    
            switchChange (e) {
                // this.isPub = e.detail.value
                this[e.target.dataset.field] = e.detail.value
            },
    
            delImg () {
                const file = AV.File.createWithoutData(this.img[0].fileId)
                utils.loading()
                
                file.destroy().then(() => {
                    this.img = []
                    this.$apply()
                    utils.loading(true)
                })
            },
    
            locate () {
                const self = this
                wx.chooseLocation({
                    success (res) {
                        if (!res.name) {
                            utils.modal({ content: '请选择一个地点' })
                            return
                        }
                
                        self.address = res
                        self.$apply()
                    }
                })
            },
            
            chooseImg () {
                //if (this.img.length >= 3) {
                //    utils.modal({ content: '图片最多上传3张哦~' })
                //}
                const self = this
                
                wx.chooseImage({
                    count: 1,
                    success (res) {
                        // console.log(res)
                        let tempFilePath = res.tempFilePaths[0]
                        self.img = [{ url: tempFilePath, upload: false, fileId: 0 }]
                        self.$apply()
                        
                        // 文件上传
                        new AV.File('file-name', {
                            blob: { uri: tempFilePath },
                        }).save().then(file => {
                            self.img[0].url = file.url()
                            self.img[0].thumbUrl = file.thumbnailURL(420, 200)
                            self.img[0].upload = true
                            self.img[0].fileId = file.id
                            self.$apply()
                        }).catch(console.error)
                    }
                })
            },
    
            submit () {
                const data = this.getForm()
                
                if (!data) {
                    return
                }
                
                const dbContent = DB.setTableContent()
                Object.keys(data).forEach(field => {
                    dbContent.set(field, data[field])
                })
    
                dbContent.save().then(function (todo) {
                    utils.toast('发表成功').then(() => {
                        wx.navigateBack()
                    })
                }, function (error) {
                    console.log(error)
                    utils.toast(`保存失败:${error.message}`, 'loading')
                })
            }
        }
    }
</script>
